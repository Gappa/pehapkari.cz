dist: trusty

before_install:
    # turn off XDebug to speed up
    - phpenv config-rm xdebug.ini || return 0

jobs:
    fast_finish: true
    include:
        # 1. build Docker image
        -
            stage: build
            if: NOT type = cron
            name: Build docker image
            script:
                - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
                - docker pull pehapkari/pehapkari.cz || true
                - docker build --cache-from pehapkari/pehapkari.cz -t pehapkari/pehapkari.cz:$TRAVIS_COMMIT --target production -f Dockerfile .
                - docker push pehapkari/pehapkari.cz

        # 2. using built Docker image from previous step
        -
            stage: test
            name: Static Analysis
            script:
                - docker run --rm pehapkari/pehapkari.cz:$TRAVIS_COMMIT composer check-cs
                - docker run --rm pehapkari/pehapkari.cz:$TRAVIS_COMMIT composer phpstan

        -
            name: PHPUnit
            script: docker run --rm pehapkari/pehapkari.cz:$TRAVIS_COMMIT php vendor/bin/phpunit

        -
            name: Rector
            script: docker run --rm pehapkari/pehapkari.cz:$TRAVIS_COMMIT composer rector

        -
            name: Linting YAML and Templates
            script:
                - docker run --rm pehapkari/pehapkari.cz:$TRAVIS_COMMIT bin/console lint:yaml src packages
                - docker run --rm pehapkari/pehapkari.cz:$TRAVIS_COMMIT bin/console lint:twig packages templates

        -
            name: Dead links
            script: docker run --rm pehapkari/pehapkari.cz:$TRAVIS_COMMIT composer dead-links

        -
            name: Prod cache warmup
            script: docker run --rm -e APP_ENV=prod pehapkari/pehapkari.cz:$TRAVIS_COMMIT bin/console cache:warmup

        -
            stage: deploy
            name: Deploy to pehapkari.cz
            if: branch = master AND type = push
            script: skip
            deploy:
                -
                    provider: script
                    script: sh bin/deploy.sh
                    skip_cleanup: true

        -
            stage: crons
            name: Tweet posts
            if: branch = master AND type = cron
            script: docker run --rm -e APP_ENV=prod -e TWITTER_CONSUMER_KEY -e TWITTER_CONSUMER_SECRET -e TWITTER_OAUTH_ACCESS_TOKEN -e TWITTER_OAUTH_ACCESS_TOKEN_SECRET pehapkari/pehapkari.cz php vendor/bin/statie tweet-post statie/source

    allow_failures:
        -   stage: Static Analysis (informative)
        -   stage: Code Coverage

# do not send success notifications, they have no value
notifications:
    email:
        on_success: never
