image: docker:git

stages:
    - build
    - test
    - release
    - deploy

variables:
    GIT_STRATEGY: none
    IMAGE: registry.gitlab.com/pehapkari/pehapkari.cz
    APP_ENV: dev
    APP_DEBUG: 0
    APP_SECRET: 67d829bf61dc5f87a73fd814e2c9f629

.docker-job:
    services:
        - docker:dind
    before_script:
        - echo $CI_BUILD_TOKEN | docker login -u gitlab-ci-token registry.gitlab.com --password-stdin

build image:
    stage: build
    extends: .docker-job
    variables:
        GIT_STRATEGY: clone
    script:
        - docker pull $IMAGE || true
        - docker build --cache-from $IMAGE -t $IMAGE:$CI_COMMIT_SHA --target production -f Dockerfile .
        - docker push $IMAGE

phpunit:
    stage: test
    extends: .docker-job
    script:
        - docker run -e APP_ENV -e APP_DEBUG -e APP_SECRET $IMAGE:$CI_COMMIT_SHA php vendor/bin/phpunit

prod container:
    stage: test
    extends: .docker-job
    script:
        - docker run -e APP_ENV=prod -e APP_SECRET $IMAGE:$CI_COMMIT_SHA php bin/console cache:warmup

release:
    stage: release
    extends: .docker-job
    script:
        - docker pull $IMAGE:$CI_COMMIT_SHA
        - docker tag $IMAGE:$CI_COMMIT_SHA $IMAGE:latest
        - docker push $IMAGE
    only:
        - master

deploy:
    stage: deploy
    before_script:
        - eval $(ssh-agent -s)
        - mkdir -p ~/.ssh
        - ssh-keyscan -H $DEPLOY_HOST >> ~/.ssh/known_hosts
        - echo "$DEPLOY_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    script:
        - ssh root@$DEPLOY_HOST "cd /projects/pehapkari.cz && ./run.sh"
    environment:
        name: production
        url: https://pehapkari.cz
    only:
        - master
